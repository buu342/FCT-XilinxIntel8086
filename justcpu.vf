////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2007 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 9.2i
//  \   \         Application : sch2verilog
//  /   /         Filename : justcpu.vf
// /___/   /\     Timestamp : 06/11/2018 00:27:10
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx92i\bin\nt\sch2verilog.exe -intstyle ise -family spartan3e -w "C:/Documents and Settings/SL2aluno/Desktop/Nosso/TrabalhoFinalSL2/justcpu.sch" justcpu.vf
//Design Name: justcpu
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module justcpu(CLK, 
               INTR, 
               RESET, 
               XLXN_88, 
               XLXN_89, 
               XLXN_90, 
               XLXN_91, 
               XLXN_92, 
               XLXN_93, 
               XLXN_94, 
               XLXN_95, 
               XLXN_96, 
               XLXN_97, 
               XLXN_98, 
               XLXN_99, 
               DATA_BUS);

    input CLK;
    input INTR;
    input RESET;
   output XLXN_88;
   output XLXN_89;
   output XLXN_90;
   output XLXN_91;
   output XLXN_92;
   output [7:0] XLXN_93;
   output [7:0] XLXN_94;
   output [7:0] XLXN_95;
   output [7:0] XLXN_96;
   output [7:0] XLXN_97;
   output [7:0] XLXN_98;
   output [7:0] XLXN_99;
    inout [7:0] DATA_BUS;
   
   wire XLXN_1;
   wire XLXN_6;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_21;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_27;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_84;
   wire XLXN_85;
   wire [7:0] XLXN_86;
   wire [7:0] XLXN_87;
   
   CPU XLXI_1 (.CA(XLXN_30), 
               .CB(XLXN_35), 
               .CC(XLXN_40), 
               .CD(XLXN_45), 
               .CLK(CLK), 
               .CPC(XLXN_6), 
               .CTMP(XLXN_16), 
               .DSP(XLXN_84), 
               .IA(XLXN_29), 
               .IB(XLXN_36), 
               .IC(XLXN_39), 
               .ID(XLXN_44), 
               .IPC(XLXN_80), 
               .ISP(XLXN_75), 
               .ITMP(XLXN_74), 
               .LDTMP(XLXN_73), 
               .RA(XLXN_57), 
               .RB(XLXN_58), 
               .RBus(XLXN_25), 
               .RC(XLXN_42), 
               .RD(XLXN_59), 
               .RDADD(XLXN_60), 
               .RDAND(XLXN_21), 
               .RDNOT(XLXN_62), 
               .RDOR(XLXN_24), 
               .RDXOR(XLXN_61), 
               .RF(XLXN_27), 
               .RIR(XLXN_72), 
               .RMAR(XLXN_79), 
               .RPC(XLXN_85), 
               .RSignals(XLXN_63), 
               .RSP(XLXN_82), 
               .RTMP(XLXN_64), 
               .WA(XLXN_68), 
               .WB(XLXN_67), 
               .WC(XLXN_66), 
               .WD(XLXN_65), 
               .WF(XLXN_69), 
               .WIR(XLXN_76), 
               .WMAR(XLXN_77), 
               .WPC(XLXN_81), 
               .WSP(XLXN_70), 
               .WTMP(XLXN_71), 
               .ZA(XLXN_31), 
               .ZB(XLXN_34), 
               .ZC(XLXN_41), 
               .ZD(XLXN_46), 
               .ZPC(XLXN_83), 
               .ZSP(XLXN_1), 
               .ZTMP(XLXN_17), 
               .ADDR_BUS(XLXN_94[7:0]), 
               .A_Q(XLXN_96[7:0]), 
               .B_Q(XLXN_97[7:0]), 
               .C_Q(XLXN_98[7:0]), 
               .D_Q(XLXN_99[7:0]), 
               .QALU(XLXN_93[7:0]), 
               .QF(XLXN_87[7:0]), 
               .QIR(XLXN_86[7:0]), 
               .Q_PC(XLXN_95[7:0]), 
               .Data_Bus(DATA_BUS[7:0]));
   GND XLXI_2 (.G(XLXN_1));
   GND XLXI_8 (.G(XLXN_6));
   GND XLXI_19 (.G(XLXN_16));
   GND XLXI_20 (.G(XLXN_17));
   GND XLXI_24 (.G(XLXN_21));
   GND XLXI_27 (.G(XLXN_24));
   GND XLXI_28 (.G(XLXN_25));
   GND XLXI_30 (.G(XLXN_27));
   GND XLXI_32 (.G(XLXN_29));
   GND XLXI_33 (.G(XLXN_30));
   GND XLXI_35 (.G(XLXN_31));
   GND XLXI_38 (.G(XLXN_34));
   GND XLXI_39 (.G(XLXN_35));
   GND XLXI_40 (.G(XLXN_36));
   GND XLXI_43 (.G(XLXN_39));
   GND XLXI_44 (.G(XLXN_40));
   GND XLXI_45 (.G(XLXN_41));
   GND XLXI_46 (.G(XLXN_42));
   GND XLXI_48 (.G(XLXN_44));
   GND XLXI_49 (.G(XLXN_45));
   GND XLXI_50 (.G(XLXN_46));
   CONTROLADOR XLXI_55 (.CLK(CLK), 
                        .FLAGS(XLXN_87[7:0]), 
                        .INTR(INTR), 
                        .OP(XLXN_86[7:0]), 
                        .RESET(RESET), 
                        .DSP(XLXN_84), 
                        .EIO(XLXN_92), 
                        .ERAM(XLXN_88), 
                        .INTA(XLXN_89), 
                        .IPC(XLXN_80), 
                        .ISP(XLXN_75), 
                        .ITMP(XLXN_74), 
                        .LDTMP(XLXN_73), 
                        .nRW(XLXN_90), 
                        .RA(XLXN_57), 
                        .RB(XLXN_58), 
                        .RD(XLXN_59), 
                        .RDADD(XLXN_60), 
                        .RDNOT(XLXN_62), 
                        .RDXOR(XLXN_61), 
                        .RF(XLXN_91), 
                        .RIR(XLXN_72), 
                        .RMAR(XLXN_79), 
                        .RPC(XLXN_85), 
                        .RSignals(XLXN_63), 
                        .RSP(XLXN_82), 
                        .RTMP(XLXN_64), 
                        .WA(XLXN_68), 
                        .WB(XLXN_67), 
                        .WC(XLXN_66), 
                        .WD(XLXN_65), 
                        .WF(XLXN_69), 
                        .WIR(XLXN_76), 
                        .WMAR(XLXN_77), 
                        .WPC(XLXN_81), 
                        .WSP(XLXN_70), 
                        .WTMP(XLXN_71), 
                        .ZPC(XLXN_83));
endmodule
